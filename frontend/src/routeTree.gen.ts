/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TaskImport } from './routes/task'
import { Route as PlanImport } from './routes/plan'
import { Route as ImportantImport } from './routes/important'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const TaskRoute = TaskImport.update({
  path: '/task',
  getParentRoute: () => rootRoute,
} as any)

const PlanRoute = PlanImport.update({
  path: '/plan',
  getParentRoute: () => rootRoute,
} as any)

const ImportantRoute = ImportantImport.update({
  path: '/important',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/important': {
      id: '/important'
      path: '/important'
      fullPath: '/important'
      preLoaderRoute: typeof ImportantImport
      parentRoute: typeof rootRoute
    }
    '/plan': {
      id: '/plan'
      path: '/plan'
      fullPath: '/plan'
      preLoaderRoute: typeof PlanImport
      parentRoute: typeof rootRoute
    }
    '/task': {
      id: '/task'
      path: '/task'
      fullPath: '/task'
      preLoaderRoute: typeof TaskImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  ImportantRoute,
  PlanRoute,
  TaskRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/important",
        "/plan",
        "/task"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/important": {
      "filePath": "important.tsx"
    },
    "/plan": {
      "filePath": "plan.tsx"
    },
    "/task": {
      "filePath": "task.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
